# Cross compiler prefix
CROSS = m68k-elf-

# Tools
#CC = m68k-elf-gcc
#LD = m68k-elf-ld
#OBJCOPY = m68k-elf-objcopy

# Directories for includes and libs (customize if different)
#INCDIR = /usr/local/m68k-elf/m68k-elf/include
LIBDIR = /usr/local/m68k-elf/m68k-elf/lib

# Target executable
TARGET = test.elf

# Source files
SRCS = test.c

# Object files
OBJS = $(SRCS:.c=.o) amix-crt0.o

# Linker script
LDSCRIPT = amix.ld

# Compiler flags
CFLAGS = -O2 -g -Wall -m68000 -nostdinc
# -nostdinc to avoid picking host includes; adjust if needed

# Linker flags
LDFLAGS = -T $(LDSCRIPT) -L$(LIBDIR) -Lamix -lc -lgcc -nostartfiles

# Default target
all: $(TARGET)

# Compile C files to objects
%.o: %.c
	m68k-elf-gcc $(CFLAGS) -c $< -o $@

# Compile crt0 (assembly startup)
amix-crt0.o: amix-crt0.S
	m68k-elf-gcc $(CFLAGS) -c $< -o $@

# Link final executable
$(TARGET): $(OBJS)
	m68k-elf-gcc $(OBJS) $(LDFLAGS) -o $(TARGET)

# Optional: generate binary and srec for flashing/emulation
%.bin: $(TARGET)
	m68k-elf-objcopy -O binary $< $@

%.srec: $(TARGET)
	m68k-elf-objcopy -O srec $< $@

# Clean up
clean:
	rm -f $(OBJS) $(TARGET) *.bin *.srec

.PHONY: all clean

SERIAL = /dev/ttyUSB0   # Change this to your actual serial port device
BAUD   = 115200

# Configure serial port, then send file
send_raw: test.bin
	stty -F $(SERIAL) $(BAUD) cs8 -cstopb -parenb raw -echo
	cat test.bin > $(SERIAL)